############################################################################################
############################################################################################
############################################################################################
#                                                                                          #
#                                                                                          #
#                          BOOTSTRAP SKIN CONFIGURATION FILE                               #
#                                                                                          #
#                                                                                          #
############################################################################################
#                         Based on the Standard skin configuration file by                 #
#                        Copyright (c) 2010 Tom Keffer <tkeffer@gmail.com>                 #
#                                                                                          #
#                                                                                          #
############################################################################################
#
#
############################################################################################

[Extras]

    #
    # Put any extra tags here that you want to be available in the templates
    #
    
    # Here's an example. 
    # This radar image would be available as $Extras.radar_img
    # (Comment the line out if you don't want to include the radar image)
    #radar_img = http://radar.weather.gov/ridge/lite/N0R/RTX_loop.gif
    # This URL will be used as the image hyperlink:
    #radar_url = http://radar.weather.gov/ridge/radar.php?product=NCR&rid=RTX&loop=yes
    
    # Here's another. If you have a Google Analytics ID, uncomment and edit 
    # the next line, and the analytics code will be included available
    # in your HTML templates files:
    #googleAnalyticsId = UA-12345678-1

    # "#" for nothing, or a hyperlink to some more information on your location
    location_href = https://de.wikipedia.org/wiki/Hallein
    
############################################################################################

[CheetahGenerator]

    # This section is used by the generator CheetahGenerator, and specifies
    # which files are to be generated from which template.

    encoding = utf8    # Possible encodings are 'html_entities', 'utf8', or 'strict_ascii'
    search_list_extensions = user.historygenerator.MyXSearch

    [[SummaryByMonth]]
        #
        # Reports that summarize "by month"
        #
        [[[NOAA_month]]]
            encoding = strict_ascii
            template = NOAA/NOAA-YYYY-MM.txt.tmpl

    [[SummaryByYear]]
        #
        # Reports that summarize "by year"
        #
        [[[NOAA_year]]]
            encoding = strict_ascii
            template = NOAA/NOAA-YYYY.txt.tmpl

    [[ToDate]]
        #
        # Reports that show statistics "to date", such as day-to-date,
        # week-to-date, month-to-date, etc.
        #
        [[[history]]]
            template = history.html.tmpl

    [[HTMLFiles]]
        #
        # Pages that do not require time interval specific tags
        #
        [[[about]]]
            template = about.html.tmpl

        [[[news]]]
            template = news.html.tmpl

        [[[stats]]]
            template = stats.html.tmpl

        [[[day]]]
            template = day.html.tmpl

        [[[week]]]
            template = week.html.tmpl

        [[[month]]]
            template = month.html.tmpl

        [[[year]]]
            template = year.html.tmpl
        
        [[[live]]]
            template = index.html.tmpl

############################################################################################

[CopyGenerator]

    #
    # This section is used by the generator CopyGenerator
    #

    # List of files that are to be copied at the first invocation of the generator only
    copy_once = css/*, js/*

    # List of files to be copied every time:
    # copy_always =

############################################################################################
[HistoryColors]
    # minvalues, maxvalues and colors and fontColors should contain the same number of elements.
    #
    # For example,  the [min_temp] example below, if the minimum temperature measured in
    # a month is between -50 and -10 (degC) then the cell will be shaded in html color code #0029E5.
    #
    # colors = background color
    # fontColors = foreground color [optional, defaults to black if omitted]

    [[outTemp]]
        [[[degree_C]]]
            # These are for Celsius
            minvalues = -50, -30, -28, -26, -24, -22, -20, -18, -16, -14, -12, -10, -8, -6, -4, -2, 0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 45
            maxvalues = -30, -28, -26, -24, -22, -20, -18, -16, -14, -12, -10, -8, -6, -4, -2, 0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 45, 60
            colors = "#404240", "#646664", "#8C8A8C", "#B4B2B4", "#CCCECC", "#E4E6E4", "#743274", "#AC32AC", "#CC32CC", "#FC32FC", "#FC9AFC", "#143dde", "#3466FC", "#349AFC", "#34CEFC", "#34FEFC", "#047604", "#049A04", "#04BA04", "#04DE04", "#04FE04", "#FCFE34", "#FCEE34", "#FCDE34", "#FCCE34", "#FCBA34", "#FCAA04", "#FC9A04", "#FC7604", "#FC0204", "#EC0204", "#CC0204", "#BC0204", "#AC0204", "#9C0204", "#8C0204", "#740204", "#5C0204"
            fontColors = "#bbbbbb", "#bbbbbb", "#333333", "#333333", "#333333", "#333333", "#bbbbbb", "#bbbbbb", "#333333", "#333333", "#333333", "#bbbbbb", "#bbbbbb", "#333333", "#333333", "#333333", "#bbbbbb", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#bbbbbb", "#bbbbbb", "#bbbbbb", "#bbbbbb", "#bbbbbb"
        [[[degree_F]]]
            # Use these for Fahrenheit
            minvalues = -60, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100
            maxvalues = 10,  20, 30, 40, 50, 60, 70, 80, 90, 100, 140
            colors =   "#0029E5", "#0186E7", "#02E3EA", "#04EC97", "#05EF3D", "#2BF207", "#8AF408", "#E9F70A", "#F9A90B", "#FC4D0D", "#FF0F2D"
            fontColors =   "#FFFFFF", "#FFFFFF", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#FFFFFF", "#FFFFFF", "#FFFFFF"

    [[rain]]
        [[[mm]]]
            # These are for mm
            minvalues = 0, 25, 50, 75, 100, 150, 200, 250, 300, 350
            maxvalues = 25, 50, 75, 100, 150, 200, 250, 300, 350, 500
            colors = "#e6e5fc", "#cccafc", "#acaafc", "#8486fc", "#6c6efc", "#5c5afc", "#fc02fc", "#d402d4", "#9c029c", "#6d016d"
            fontColors = "#333333", "#333333", "#333333", "#333333", "#bbbbbb", "#bbbbbb", "#333333", "#333333", "#bbbbbb", "#bbbbbb"
            # if the summary is to be calculated independently, specify here.
            [[[[summary]]]]
                minvalues = 1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900
                maxvalues = 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 5000
                colors = "#e6e5fc", "#cccafc", "#acaafc", "#8486fc", "#6c6efc", "#5c5afc", "#fc02fc", "#d402d4", "#9c029c", "#6d016d"
                fontColors = "#333333", "#333333", "#333333", "#333333", "#bbbbbb", "#bbbbbb", "#333333", "#333333", "#bbbbbb", "#bbbbbb"
        [[[inch]]]
            # Use these instead for inches
            minvalues = 0, 1, 2, 3, 4, 5, 6, 7, 8, 9
            maxvalues = 1, 2, 3, 4, 5, 6, 7, 8, 9, 20
            colors = "#e6e5fc", "#cccafc", "#acaafc", "#8486fc", "#6c6efc", "#5c5afc", "#fc02fc", "#d402d4", "#9c029c", "#6d016d"
            fontColors = "#333333", "#333333", "#333333", "#333333", "#bbbbbb", "#bbbbbb", "#333333", "#333333", "#bbbbbb", "#bbbbbb"
             # if the summary is to be calculated independently, specify here.
            [[[[summary]]]]
                minvalues = 40, 44, 48, 52, 56, 60, 64, 68, 72, 76
                maxvalues = 44, 48, 52, 56, 60, 64, 68, 72, 76, 100
                colors = "#e6e5fc", "#cccafc", "#acaafc", "#8486fc", "#6c6efc", "#5c5afc", "#fc02fc", "#d402d4", "#9c029c", "#6d016d"
                fontColors = "#333333", "#333333", "#333333", "#333333", "#bbbbbb", "#bbbbbb", "#333333", "#333333", "#bbbbbb", "#bbbbbb"

    [[rainRate]]
        [[[mm_per_hour]]]
            # These are for mm per hour
            minvalues = 0, 10, 20, 30, 40, 50, 60, 70, 80, 90
            maxvalues = 10, 20, 30, 40, 50, 60, 70, 80, 90, 1000
            colors = "#e6e5fc", "#cccafc", "#acaafc", "#8486fc", "#6c6efc", "#5c5afc", "#fc02fc", "#d402d4", "#9c029c", "#6d016d"
            fontColors = "#333333", "#333333", "#333333", "#333333", "#bbbbbb", "#bbbbbb", "#333333", "#333333", "#bbbbbb", "#bbbbbb"
        [[[inch_per_hour]]]
            # Use these instead for inches per hour
            minvalues = 0, 0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5
            maxvalues = 0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 50
            colors = "#e6e5fc", "#cccafc", "#acaafc", "#8486fc", "#6c6efc", "#5c5afc", "#fc02fc", "#d402d4", "#9c029c", "#6d016d"
            fontColors = "#333333", "#333333", "#333333", "#333333", "#bbbbbb", "#bbbbbb", "#333333", "#333333", "#bbbbbb", "#bbbbbb"

    [[rainDays]]
        [[[count]]]
            minvalues = 1, 5, 10, 15, 20, 25    
            maxvalues = 5, 10, 15, 20, 25, 32 # if you want to have 31 included, you need to specify 32 as the upper boundary
            colors = "#e6e5fc", "#cccafc", "#acaafc", "#8486fc", "#6c6efc", "#5c5afc"
            fontColors = "#333333", "#333333", "#333333", "#333333", "#bbbbbb", "#bbbbbb"
            [[[[summary]]]]
                minvalues = 1, 100, 120, 140, 160, 180
                maxvalues = 100, 120, 140, 160, 180, 367 # if you want to have 366 (number of days in a leap year) included, you need to specify 32 as the upper boundary
                colors = "#e6e5fc", "#cccafc", "#acaafc", "#8486fc", "#6c6efc", "#5c5afc"
                fontColors = "#333333", "#333333", "#333333", "#333333", "#bbbbbb", "#bbbbbb"

    [[windGust]]
        [[[meter_per_second]]]
            minvalues = 0, 0.3, 1.5, 3.3, 5.4, 7.9, 10.7, 13.8, 17.1, 20.7, 24.4, 28.4, 32.6
            maxvalues = 0.3, 1.5, 3.3, 5.4, 7.9, 10.7, 13.8, 17.1, 20.7, 24.4, 28.4, 32.6, 100
            colors = "#ffffff", "#72d475", "#10cd24", "#00b900", "#f1eea5", "#f6ef27", "#fed6d3", "#ffb6b3", "#ff9e9a", "#ff8281", "#ff6160", "#ff453c", "#ff200e"
            fontColors = "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333"
        [[[km_per_hour]]]
            minvalues = 0, 1, 5, 11, 19, 29, 39, 50, 61, 74, 88, 102, 118
            maxvalues = 1, 5, 11, 19, 29, 39, 49, 61, 74, 88, 102, 118, 300
            colors = "#ffffff", "#72d475", "#10cd24", "#00b900", "#f1eea5", "#f6ef27", "#fed6d3", "#ffb6b3", "#ff9e9a", "#ff8281", "#ff6160", "#ff453c", "#ff200e"
            fontColors = "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333"
        [[[mile_per_hour]]]
            minvalues = 0, 1, 3, 7, 12, 18, 24, 31, 38, 46, 54, 63, 72
            maxvalues = 1, 3, 7, 12, 18, 24, 31, 38, 46, 54, 63, 72, 200
            colors = "#ffffff", "#72d475", "#10cd24", "#00b900", "#f1eea5", "#f6ef27", "#fed6d3", "#ffb6b3", "#ff9e9a", "#ff8281", "#ff6160", "#ff453c", "#ff200e"
            fontColors = "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333"

    [[summerDays]]
        [[[count]]]
            minvalues = 1, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22
            maxvalues = 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 32
            colors = "#fceded", "#fcdbdb", "#fcc0c0", "#fcaaaa", "#fc9090", "#fc7a7a", "#fc6060", "#fc4c4c", "#fc3030", "#fc1b1b", "#fc1b1b", "#fc0000"
            fontColors = "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#bbbbbb", "#bbbbbb", "#bbbbbb", "#bbbbbb", "#bbbbbb", "#bbbbbb"
            [[[[summary]]]]
                minvalues = 0, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100
                maxvalues = 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100, 367
                colors = "#fceded", "#fcdbdb", "#fcc0c0", "#fcaaaa", "#fc9090", "#fc7a7a", "#fc6060", "#fc4c4c", "#fc3030", "#fc1b1b", "#fc1b1b", "#fc0000"
                fontColors = "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#bbbbbb", "#bbbbbb", "#bbbbbb", "#bbbbbb", "#bbbbbb", "#bbbbbb""#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333"

    [[hotDays]]
        [[[count]]]
            minvalues = 1, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22
            maxvalues = 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 32
            colors = "#fceded", "#fcdbdb", "#fcc0c0", "#fcaaaa", "#fc9090", "#fc7a7a", "#fc6060", "#fc4c4c", "#fc3030", "#fc1b1b", "#fc1b1b", "#fc0000"
            fontColors = "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#bbbbbb", "#bbbbbb", "#bbbbbb", "#bbbbbb", "#bbbbbb", "#bbbbbb"
            [[[[summary]]]]
                minvalues = 1, 5, 10, 15, 20, 25, 30, 35, 45, 50, 55, 60
                maxvalues = 5, 10, 15, 20, 25, 30, 35, 40, 50, 55, 60, 367
                colors = "#fceded", "#fcdbdb", "#fcc0c0", "#fcaaaa", "#fc9090", "#fc7a7a", "#fc6060", "#fc4c4c", "#fc3030", "#fc1b1b", "#fc1b1b", "#fc0000"
                fontColors = "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#bbbbbb", "#bbbbbb", "#bbbbbb", "#bbbbbb", "#bbbbbb", "#bbbbbb"

    [[desertDays]]
        [[[count]]]
            minvalues = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12
            maxvalues = 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 32
            colors = "#fceded", "#fcdbdb", "#fcc0c0", "#fcaaaa", "#fc9090", "#fc7a7a", "#fc6060", "#fc4c4c", "#fc3030", "#fc1b1b", "#fc1b1b", "#fc0000"
            fontColors = "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#bbbbbb", "#bbbbbb", "#bbbbbb", "#bbbbbb", "#bbbbbb", "#bbbbbb"
            [[[[summary]]]]
                minvalues = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12
                maxvalues = 2, 3, 4, 5, 6, 7, 8, 10, 10, 11, 12, 367
                colors = "#fceded", "#fcdbdb", "#fcc0c0", "#fcaaaa", "#fc9090", "#fc7a7a", "#fc6060", "#fc4c4c", "#fc3030", "#fc1b1b", "#fc1b1b", "#fc0000"
                fontColors = "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#bbbbbb", "#bbbbbb", "#bbbbbb", "#bbbbbb", "#bbbbbb", "#bbbbbb"

    [[vegetationDays]]
        [[[count]]]
            minvalues = 1, 5, 10, 15, 20, 25
            maxvalues = 5, 10, 15, 20, 25, 32
            colors = "#d4fcd4", "#c6fcc6", "#9bfc9b", "#64fc64", "#28fc28", "#00c800"
            fontColors = "#333333", "#333333", "#333333", "#333333", "#333333", "#333333"
            [[[[summary]]]]
                minvalues = 1, 200, 220, 240, 260, 280
                maxvalues = 200, 220, 240, 260, 280, 367
                colors = "#d4fcd4", "#c6fcc6", "#9bfc9b", "#64fc64", "#28fc28", "#00c800"
                fontColors = "#333333", "#333333", "#333333", "#333333", "#333333", "#333333"

    [[frostDays]]
        [[[count]]]
            minvalues = 1, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30
            maxvalues = 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32
            colors = "#EDEDFC", "#E0E0FC", "#D0D0FC", "#C0C0FC", "#B0B0FC", "#A0A0FC", "#9090FC", "#8080FC", "#7070FC", "#6060FC", "#5050FC", "#4040FC", "#6020FC", "#9015FC", "#AF10FC", "#CC10FC"
            fontColors = "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#bbbbbb", "#bbbbbb", "#bbbbbb", "#bbbbbb", "#bbbbbb", "#bbbbbb", "#bbbbbb", "#bbbbbb"

            [[[[summary]]]]

            minvalues = 1, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100, 105, 110
            maxvalues = 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100, 105, 110, 367
            colors = "#EDEDFC", "#E0E0FC", "#D0D0FC", "#C0C0FC", "#B0B0FC", "#A0A0FC", "#9090FC", "#8080FC", "#7070FC", "#6060FC", "#5050FC", "#4040FC", "#6020FC", "#9015FC", "#AF10FC", "#CC10FC"
            fontColors = "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#bbbbbb", "#bbbbbb", "#bbbbbb", "#bbbbbb", "#bbbbbb", "#bbbbbb", "#bbbbbb", "#bbbbbb"

    [[iceDays]]
        [[[count]]]
            minvalues = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 18, 20
            maxvalues = 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 18, 20, 32
            colors = "#EDEDFC", "#E0E0FC", "#D0D0FC", "#C0C0FC", "#B0B0FC", "#A0A0FC", "#9090FC", "#8080FC", "#7070FC", "#6060FC", "#5050FC", "#4040FC", "#6020FC", "#9015FC", "#AF10FC", "#CC10FC"
            fontColors = "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#bbbbbb", "#bbbbbb", "#bbbbbb", "#bbbbbb", "#bbbbbb", "#bbbbbb", "#bbbbbb", "#bbbbbb"
            [[[[summary]]]]
                minvalues = 1, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 31
                maxvalues = 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 367
                colors = "#EDEDFC", "#E0E0FC", "#D0D0FC", "#C0C0FC", "#B0B0FC", "#A0A0FC", "#9090FC", "#8080FC", "#7070FC", "#6060FC", "#5050FC", "#4040FC", "#6020FC", "#9015FC", "#AF10FC", "#CC10FC"
                fontColors = "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#bbbbbb", "#bbbbbb", "#bbbbbb", "#bbbbbb", "#bbbbbb", "#bbbbbb", "#bbbbbb", "#bbbbbb"


[HistoryReport]
    #
    # Settings for the HTML month/year color coded summary table generator
    #

    # Restrict the size of the table by ignoring everything before startdate
    # Specify in unix epoch time. e.g. 1325376000 is 1-Jan-2012
    # Note: whatever you specify as startdate, the whole year (or better: all
    # the values availlable for this year) this startdate is within, will be included in the table.
    #startdate = 1325376000

    # The Raspberry Pi typically takes 15+ seconds to calculate all the summaries with a few years of weather date.
    # refresh_interval is how often in minutes the tables are calculated.
    refresh_interval = 5

    [[min_temp]]
        obs_type = outTemp                 # obs_type can be any weewx reading
        aggregate_type = min               # Any of these: 'sum', 'count', 'avg', 'max', 'min'
        summary_column = true

    #
    # You can also use these aggregate_types:  'max_ge', 'max_le', 'min_le', 'sum_ge' to count days
    # where an observation is ge: greater of equalto, or le: lessthan or equal to a threshold value
    # To specify this threshold, use: aggregate_threshold = [value], [units]
    #
    # e.g Specify temperature threshold of 20C:  aggregate_threshold = 20, degree_C
    #

    [[avg_temp]]
        obs_type = outTemp
        aggregate_type = avg
        summary_column = true

    [[max_temp]]
        obs_type = outTemp
        aggregate_type = max
        summary_column = true

    [[rain]]
        obs_type = rain
        aggregate_type = sum
        summary_column = true

    [[rain_days]]
        obs_type = rain
        colors = rainDays, count # colors are derived from obs_type per default, specify colors from [Colors] to override
        units = ""                        # Override default table units label
        aggregate_type = sum_ge
        aggregate_threshold = 1, mm
        summary_column = true

    [[rain_rate]]
        obs_type = rainRate
        aggregate_type = max
        summary_column = true

    [[max_wind]]
        obs_type = windGust
        aggregate_type = max
        summary_column = true

    [[summer_days]]
        obs_type = outTemp
        colors = summerDays, count # colors are derived from obs_type per default, specify colors from [Colors] to override
        units = ""                        # Override default table units label
        aggregate_type = max_ge
        aggregate_threshold = 25, degree_C
        summary_column = true

    [[hot_days]]
        obs_type = outTemp
        colors = hotDays, count # colors are derived from obs_type per default, specify colors from [Colors] to override
        units = ""                        # Override default table units label
        aggregate_type = max_ge
        aggregate_threshold = 30, degree_C
        summary_column = true

    [[desert_days]]
        obs_type = outTemp
        colors = desertDays, count # colors are derived from obs_type per default, specify colors from [Colors] to override
        units = ""                        # Override default table units label
        aggregate_type = max_ge
        aggregate_threshold = 35, degree_C
        summary_column = true

    [[vegetations_days]]
        obs_type = outTemp
        colors = vegetationDays, count # colors are derived from obs_type per default, specify colors from [Colors] to override
        units = ""                        # Override default table units label
        aggregate_type = avg_ge
        aggregate_threshold = 5, degree_C
        summary_column = true

    [[frost_days]]
        obs_type = outTemp
        colors = frostDays, count # colors are derived from obs_type per default, specify colors from [Colors] to override
        units = ""                        # Override default table units label
        aggregate_type = min_le
        aggregate_threshold = 0, degree_C
        summary_column = true

    [[ice_days]]
        obs_type = outTemp
        colors = iceDays, count # colors are derived from obs_type per default, specify colors from [Colors] to override
        units = ""                        # Override default table units label
        aggregate_type = max_le
        aggregate_threshold = 0, degree_C
        summary_column = true

    [[NOAA]]
        #
        # Creates a table of links to NOAA reports with the tag $NOAA_table
        # Comment out [[NOAATable]] if you do not need this.
        #

        # Where to find the NOAA files and how they are named
        # Uses Python datetime convention (docs.python.org/2/library/datetime.html):
        # %Y = YYYY, %y = YY, %m = MM, etc.
        #
        year_filename = NOAA/NOAA-%Y.txt
        month_filename = NOAA/NOAA-%Y-%m.txt

[Stats]
    [[outTemp]]
        since_ever = true # optional, default true
        [[[max]]]
        [[[min]]]
        [[[maxmin]]]
            show_today = false
        [[[minmax]]]
            show_today = false

    [[rain]]
        [[[sum]]]
            since_ever = false
            show_time = false
        [[[maxsum]]]
            show_today = false
            label = "Maximum daily rainfall" # to be translated, label text must be in [Texts] of each {lang}.conf

    [[rainRate]]
        [[[max]]]
            label = "Maximum rain rate"

    [[barometer]]
        [[[max]]]
        [[[min]]]

    [[wind]]
        [[[max]]]

############################################################################################
[ImageGenerator]

    #
    # This section lists all the images to be generated, what SQL types are to
    # be included in them, along with many plotting options, such as color or
    # font. There's a default for almost everything, if not specified
    # below. Nevertheless, I've explicitly put in values, to make it easy to see
    # and understand the options.
    #
    # Fonts can be anything accepted by the Python Imaging Library (PIL), which
    # is currently truetype (.ttf), or PIL's own font format (.pil). See
    # http://www.pythonware.com/library/pil/handbook/imagefont.htm for more
    # details.  Note that "font size" is only used with truetype (.ttf)
    # fonts. For others, font size is determined by the bit-mapped size, usually
    # encoded in the file name (e.g., courB010.pil). If a font can't be found,
    # then a default font will be used.
    #

    #
    # Anti-aliasing
    #
    anti_alias = 3
    width = 1

    show_daynight = true

    # These control the appearance of the bands if they are shown.
    # Here's a monochrome scheme:
    # daynight_day_color   = 0xdfdfdf
    # daynight_night_color = 0xffff00
    # daynight_edge_color  = 0xd0d0d0
    # Here's an alternative, using a blue/yellow tint:
    # daynight_day_color   = 0xf8ffff
    # daynight_night_color = 0xfff8f8
    # daynight_edge_color  = 0xf8f8ff

    # Richie's day-night colors
    # daynight_day_color   = 0xf8ffff
    # daynight_night_color = 0xbcffde
    # daynight_edge_color  = 0xd9ffd1

    # Nick's values - frankly monochrome is best
    daynight_day_color   = 0xdfdfdf
    daynight_night_color = 0xbbbbbb
    daynight_edge_color  = 0xd0d0d0

    image_width = 350
    image_height = 250

    # width and height for large images, default 900x600
    large_image_width = 900
    large_image_height = 600

    image_background_color = 0xffffff

    chart_background_color = 0xffffff
    chart_gridline_color = 0xa0a0a0

    top_label_font_path = font/FreeMonoBold.ttf
    top_label_font_size = 14

    unit_label_font_path = font/FreeMonoBold.ttf
    unit_label_font_size = 10
    unit_label_font_color = 0x000000

    bottom_label_font_path = font/FreeMonoBold.ttf
    bottom_label_font_size = 10
    bottom_label_font_color = 0x000000

    axis_label_font_path = font/FreeMonoBold.ttf
    axis_label_font_size = 10
    axis_label_font_color = 0x000000

    # Options for the compass rose, used for progressive vector plots
    rose_label = N
    rose_label_font_path = font/FreeMonoBold.ttf
    rose_label_font_size  = 12
    rose_label_font_color = 0x000000

    # Default colors for the plot lines. These can be overridden for
    # individual lines using option 'color'
    chart_line_colors = 0xb48242, 0x4242b4, 0x42b442

    # Type of line. Only 'solid' or 'none' is offered now
    line_type = 'solid'

    # Size of marker in pixels
    marker_size = 8
    # Type of marker. Pick one of 'cross', 'x', 'circle', 'box', or 'none'
    marker_type ='none'

    ##
    ## What follows is a list of subsections, each specifying a time span, such
    ## as a day, week, month, or year. There's nothing special about them or
    ## their names: it's just a convenient way to group plots with a time span
    ## in common. You could add a time span [[biweek_images]] and add the
    ## appropriate time length, aggregation strategy, etc., without changing any
    ## code.
    ##
    ## Within each time span, each sub-subsection is the name of a plot to be
    ## generated for that time span. The generated plot will be stored using
    ## that name, in whatever directory was specified by option 'HTML_ROOT'
    ## in weewx.conf.
    ##
    ## With one final nesting (four brackets!) is the sql type of each line to
    ## be included within that plot.
    ##
    ## Unless overridden, leaf nodes inherit options from their parent
    ##

    # Default plot and aggregation. Can get overridden at any level.
    plot_type = line
    aggregate_type = none
    # width = 1
    time_length = 86400    # == 24 hours

    # The following option merits an explanation. The y-axis scale used for plotting
    # can be controlled using option 'yscale'. It is a 3-way tuple, with
    # values (ylow, yhigh, min_interval). If set to "None", a parameter is
    # set automatically, otherwise the value is used. However, in the case of
    # min_interval, what is set is the *minimum* y-axis tick interval.
    yscale = None, None, None

    # For progressive vector plots, you can choose to rotate the vectors.
    # Positive is clockwise.
    # For my area, westerlies overwhelmingly predominate, so by rotating
    # positive 90 degrees, the average vector will point straight up.
    vector_rotate = 90

    [[day_images]]
        x_label_format = %H:%M
        bottom_label_format = %x %X
        time_length = 97200    # == 27 hours

        [[[daytempchill-Bootstrap]]]
            [[[[outTemp]]]]
            [[[[dewpoint]]]]

        [[[daybarometer-Bootstrap]]]
            [[[[barometer]]]]

        [[[dayrain-Bootstrap]]]
            # Make sure the y-axis increment is at least 0.02 for the rain plot:
            yscale = None, None, 0.02
            plot_type = bar
            [[[[rain]]]]
                aggregate_type = sum
                aggregate_interval = 3600
#                label = Rain (hourly total)

        [[[dayhumidity-Bootstrap]]]
            [[[[outHumidity]]]]

        [[[daywind-Bootstrap]]]
            [[[[windSpeed]]]]
            [[[[windGust]]]]

        [[[daywinddir-Bootstrap]]]
            # Hardwire in the y-axis scale for wind direction:
            yscale = 0.0, 360.0, 45.0
            # Don't join lines
            # Type of line. Only 'solid' or 'none' is offered now
            line_type = 'none'
            # Size of marker in pixels
            marker_size = 6
            # Type of marker. Pick one of 'cross', 'x', 'circle', 'box', or 'none'
            marker_type ='cross'
            [[[[windDir]]]]

        [[[dayradiation-Bootstrap]]]
            [[[[radiation]]]]

        [[[daysupplyVoltage-Bootstrap]]]
            [[[[supplyVoltage]]]]

    [[week_images]]
        x_label_format = %d
        bottom_label_format = %x %X
        time_length = 604800    # == 7 days
        aggregate_type = avg
        aggregate_interval = 3600

        [[[week-tempchill-Bootstrap]]]
            [[[[outTemp]]]]
            [[[[dewpoint]]]]

        [[[week-barometer-Bootstrap]]]
            [[[[barometer]]]]

        [[[week-rain-Bootstrap]]]
            # Make sure the y-axis increment is at least 0.02 for the rain plot:
            yscale = None, None, 0.02
            plot_type = bar
            [[[[rain]]]]
                aggregate_type = sum
                aggregate_interval = 3600
#                label = Rain (hourly total)

        [[[week-humidity-Bootstrap]]]
            [[[[outHumidity]]]]

        [[[week-wind-Bootstrap]]]
            [[[[windSpeed]]]]
            [[[[windGust]]]]
                aggregate_type = max

        [[[week-winddir-Bootstrap]]]
            # Hardwire in the y-axis scale for wind direction:
            yscale = 0.0, 360.0, 45.0
            # Don't join lines
            # Type of line. Only 'solid' or 'none' is offered now
            line_type = 'none'
            # Size of marker in pixels
            marker_size = 6
            # Type of marker. Pick one of 'cross', 'x', 'circle', 'box', or 'none'
            marker_type ='cross'
            [[[[windDir]]]]

        [[[weekradiation-Bootstrap]]]
            [[[[radiation]]]]
              aggregate_type = avg
              aggregate_interval = 300

        [[[weeksupplyVoltage-Bootstrap]]]
            [[[[supplyVoltage]]]]


    [[month_images]]
        x_label_format = %d
        bottom_label_format = %x %X
        time_length = 2592000    # == 30 days
        aggregate_type = avg
        aggregate_interval = 10800    # == 3 hours
        show_daynight = false

        [[[monthtempchill-Bootstrap]]]
            [[[[outTemp]]]]
            [[[[dewpoint]]]]

        [[[monthbarometer-Bootstrap]]]
            [[[[barometer]]]]

        [[[monthrain-Bootstrap]]]
            # Make sure the y-axis increment is at least 0.02 for the rain plot:
            yscale = None, None, 0.02
            plot_type = bar
            [[[[rain]]]]
                aggregate_type = sum
                aggregate_interval = 3600
#                label = Rain (hourly total)

        [[[monthhumidity-Bootstrap]]]
            [[[[outHumidity]]]]

        [[[monthwind-Bootstrap]]]
            [[[[windSpeed]]]]
            [[[[windGust]]]]
                aggregate_type = max

        [[[monthwinddir-Bootstrap]]]
            # Hardwire in the y-axis scale for wind direction:
            yscale = 0.0, 360.0, 45.0
            # Don't join lines
            # Type of line. Only 'solid' or 'none' is offered now
            line_type = 'none'
            # Size of marker in pixels
            marker_size = 6
            # Type of marker. Pick one of 'cross', 'x', 'circle', 'box', or 'none'
            marker_type ='cross'
            [[[[windDir]]]]

        [[[monthradiation-Bootstrap]]]
            [[[[radiation]]]]
                plot_type = bar
                color = 0x11d2e3
                fill_color = 0x0de0f3
                aggregate_type = avg
                aggregate_interval = 86400
                label = PV Output (avg.)
            [[[[max_radiation]]]]
                line_type = 'none'
                marker_type ='cross'
                marker_size = 3
                data_type = radiation
                aggregate_type = max
                aggregate_interval = 86400
                label = PV Output (max.)

        [[[monthsupplyVoltage-Bootstrap]]]
            [[[[supplyVoltage]]]]

  [[year_images]]
        x_label_format = %m/%y
        bottom_label_format = %x %X
        time_length = 31536000    # == 365 days
        aggregate_type = avg
        aggregate_interval = 86400
        show_daynight = false

        [[[yeartempmaxmin-Bootstrap]]]
            [[[[min_outTemp]]]]
                data_type = outTemp
                aggregate_type = min
                label = Min
            [[[[outTemp]]]]
                aggregate_type = max
                label = Max

        [[[yearbarometer-Bootstrap]]]
            [[[[barometer]]]]

        [[[yearrain-Bootstrap]]]
            # Make sure the y-axis increment is at least 0.02 for the rain plot:
            yscale = None, None, 0.02
            plot_type = bar
            [[[[rain]]]]
                aggregate_type = sum
                aggregate_interval = 3600
#                label = Rain (hourly total)

        [[[yearhumidity-Bootstrap]]]
            [[[[outHumidity]]]]

        [[[yearwind-Bootstrap]]]
            [[[[windSpeed]]]]
            [[[[windGust]]]]
                aggregate_type = max

        [[[yearwinddir-Bootstrap]]]
            # Hardwire in the y-axis scale for wind direction:
            yscale = 0.0, 360.0, 45.0
            # Don't join lines
            # Type of line. Only 'solid' or 'none' is offered now
            line_type = 'none'
            # Size of marker in pixels
            marker_size = 6
            # Type of marker. Pick one of 'cross', 'x', 'circle', 'box', or 'none'
            marker_type ='cross'
            [[[[windDir]]]]

        [[[yearradiation-Bootstrap]]]
            [[[[radiation]]]]
                plot_type = bar
                color = 0x11d2e3
                fill_color = 0x0de0f3
                aggregate_type = avg
                aggregate_interval = 86400
                label = PV Output (avg.)
            [[[[max_radiation]]]]
                line_type = 'none'
                marker_type ='cross'
                marker_size = 3
                data_type = radiation
                aggregate_type = max
                aggregate_interval = 86400
                label = PV Output (max.)

        [[[yearsupplyVoltage-Bootstrap]]]
            [[[[min_supplyVoltage]]]]
                line_type = 'none'
                marker_type ='cross'
                marker_size = 3
                data_type = supplyVoltage
                aggregate_type = min
                aggregate_interval = 86400
                label = Supply Voltage (min.)
            [[[[max_supplyVoltage]]]]
                line_type = 'none'
                marker_type ='cross'
                marker_size = 3
                data_type = supplyVoltage
                aggregate_type = max
                aggregate_interval = 86400
                label = Supply Voltage (max.)


############################################################################################
[JSONGenerator]
    enabled = true
    timespan = 27
    [[MQTT]]
        [[[connections]]]
            [[[[my_mqtt_with_public_tokens]]]]
                broker_connection = wss://mqtt.flespi.io:443
                mqtt_username = i29R5vj2zIMVKQlXvvGeJYQntKBreHVkxU1sd8jCHVohCz2VTx0qjGDBg4QizBtX # data is exposed to frontend! make sure you use data that is not confidential, like tokens with ACL
                mqtt_password = i29R5vj2zIMVKQlXvvGeJYQntKBreHVkxU1sd8jCHVohCz2VTx0qjGDBg4QizBtX # data is exposed to frontend! make sure you use data that is not confidential, like tokens with ACL
                [[[[[topics]]]]]
                      # JSON topics hold their value(s) in a JSON object. Every key can be matched to a gauge/chart dataset
                      [[[[[[weather/loop]]]]]]
                          type = JSON
                      [[[[[[weather/pvPrivate]]]]]]
                          type = JSON

[LiveGauges]
    # These are the defaults. All minvalue/maxvalue/lineColorUntil are in their target_unit as defined in
    # weeewx.conf:
    #
    # [StdConvert]
    # target_unit = US    # Options are 'US', 'METRICWX', or 'METRIC'
    #
    # Since US is default we use it here. Since each translation in lang/xx.conf defines it's own unit_system
    # you can override these settings there! Consider making your changes in the lang file only!
    #
    # If you override particular units in your lang file, also specify the gauge in this unit, e.g.:
    # 
    # [Units]
    #     [[Groups]]
    #        group_speed        = km_per_hour
    #
    # [LiveGauges]
    #     [[windSpeed]]
    #         minvalue = 0
    #         maxvalue = 100
    #         splitnumber = 5
    #         lineColorUntil = 75, maxvalue         # 75 marks "Sturm"
    #
    # One might tthink this also applies for "payload_key", but don't override it! Set it according to the target_unit in [StdConvert]!
    # 
    # The payload keys are depending on your MQTT sources. If your source is weewx-mqtt (https://github.com/matthewwall/weewx-mqtt), the
    # payload keys below will fit. Since you can use an mix multiple sources, adapt to your needs

    [[outTemp]] #choose weewx field name
        payload_key = outTemp_C                # outTemp_C if target_unit 'METRICWX', or 'METRIC'
        minvalue = 0
        maxvalue = 100
        splitnumber = 10                       # choose a splitnumber fittig minvalue and maxvalaue: e.g.: 0/100: 10, for -20/40: 6
        lineColor = '#428bca', '#b44242'       # colors are RGBa
        lineColorUntil = 32, maxvalue          # color from start of gauge to value, change color of gauge ring to show important marks: 32 is freezing point
        decimals = 1                           # decimals for current value in gauge
        #heatMapEnabled = false                # disabled heatmap for gauge, default true
        #animation = False                     # default true

    [[barometer]]
        payload_key = barometer_mbar           # barometer_mbar if target_unit 'METRICWX', or 'METRIC'
        minvalue = 28
        maxvalue = 32
        splitnumber = 4
        lineColor = '#428bca', '#b44242'
        lineColorUntil = 29.92, maxvalue      # 29.92 is standard air pressure
        decimals = 1

    [[windDir]] #windDir is a special, circular direction gauge, options are limited
        payload_key = windDir
        lineColorN = '#428bca'
        lineColorS = '#b44242'
        decimals = 0

    [[outHumidity]]
        payload_key = disabled_outHumidity
        minvalue = 0
        maxvalue = 100
        splitnumber = 5
        lineColor = '#428bca'
        lineColorUntil = maxvalue
        decimals = 0

    [[windSpeed]]
        payload_key = windSpeed_mps           # windSpeed_mps if target_unit 'METRICWX', windSpeed_kph if 'METRIC'
        minvalue = 0
        maxvalue = 60
        splitnumber = 6
        lineColor = '#428bca', '#b44242'
        lineColorUntil = 46, maxvalue         # 46 marks strong/gale
        decimals = 0

    [[windGust]]
        payload_key = windGust_mps            # windGust_mps if target_unit 'METRICWX', windGust_kph if 'METRIC'
        minvalue = 0
        maxvalue = 100
        splitnumber = 10
        lineColor = '#428bca', '#b44242'
        lineColorUntil = 46, maxvalue         # 46 marks strong/gale
        decimals = 0

[LiveCharts]
    show_daynight = true
    # when transition from light to dark background starts and ends (height of sun in degrees):
    transition_angle = 8
    [[outTemp]] # choose freely
        #animation = False # default true
        [[[outTemp]]] #choose weewx field name
            payload_key = outTemp_C
            showMaxMarkPoint = true
            showMinMarkPoint = true
            showAvgMarkLine = true
            lineColor = '#428bca'
            decimals = 1
        [[[dewpoint]]]
            payload_key = disabled_dewpoint_C
            showMaxMarkPoint = false
            showMinMarkPoint = false
            showAvgMarkLine = false
            lineColor = '#b44242'
            decimals = 1

    [[barometer]]
        [[[barometer]]]
            payload_key = barometer_mbar
            showMaxMarkPoint = true
            showMinMarkPoint = true
            showAvgMarkLine = false
            lineColor = '#428bca'
            decimals = 1

    [[rain]]
        aggregate_interval_minutes = 30
        [[[rain]]]
            payload_key = rain_mm
            showMaxMarkPoint = false
            showMinMarkPoint = false
            showAvgMarkLine = false
            lineColor = '#428bca'
            decimals = 1

    [[outHumidity]]
        [[[outHumidity]]]
            payload_key = disabled_outHumidity
            showMaxMarkPoint = true
            showMinMarkPoint = true
            showAvgMarkLine = false
            lineColor = '#428bca'
            decimals = 0

    [[wind]]
        [[[windSpeed]]]
            payload_key = windSpeed_mps
            showMaxMarkPoint = false
            showMinMarkPoint = false
            showAvgMarkLine = false
            lineColor = '#428bca'
            decimals = 0
        [[[windGust]]]
            payload_key = windGust_mps
            showMaxMarkPoint = true
            showMinMarkPoint = false
            showAvgMarkLine = false
            lineColor = '#b44242'
            decimals = 0

    [[windDir]]
        [[[windDir]]]
            payload_key = windDir
            showMaxMarkPoint = false
            showMinMarkPoint = false
            showAvgMarkLine = false
            lineColor = '#428bca'
            decimals = 0
            symbol = circle
            symbolSize = 1
            lineWidth = 0

    [[pvOutput]]
      [[[radiation]]]
          payload_key = producedPowerDetail.symo
          convertFunction = "function(value) { return value / 3000; }"
          showMaxMarkPoint = true
          showMinMarkPoint = false
          showAvgMarkLine = false
          lineColor = '#428bca'
          unit = %d
          decimals = 3

    [[supplyVoltage]]
      [[[supplyVoltage]]]
          payload_key = supplyVoltage_volt
          showMaxMarkPoint = true
          showMinMarkPoint = true
          showAvgMarkLine = false
          lineColor = '#428bca'
          unit = %d
          decimals = 2
############################################################################################
#
# The list of generators that are to be run:
#
[Generators]
    generator_list = user.jsonengine.JSONGenerator, user.largeimagegenerator.LargeImageGenerator, weewx.imagegenerator.ImageGenerator, weewx.reportengine.CopyGenerator, weewx.cheetahgenerator.CheetahGenerator
